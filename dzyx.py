# -*- coding: utf-8 -*-
"""Dzyx

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z_zopJlZcbaIxqU2Rmopb84Uq5I_uXg9
"""

import streamlit as st
import google.generativeai as genai
import os

# Set your Google Generative AI API Key here
# It's recommended to keep this in a separate file for security reasons
api_key = os.getenv("GOOGLE_API_KEY")  # If you prefer to use an environment variable

# Configure the API key
genai.configure(api_key=api_key)

# Streamlit UI components
st.title("üí° Google Generative AI Chatbot")
st.write("Ask me anything!")

# User input field
user_input = st.text_input("Type your question:")

if st.button("Generate Response"):
    if user_input:
        try:
            model = genai.GenerativeModel("gemini-pro")
            response = model.generate_content(user_input)
            st.write("### ü§ñ AI Response:")
            st.write(response.text)
        except Exception as e:
            st.error(f"An error occurred: {e}")
    else:
        st.warning("‚ö†Ô∏è Please enter a question first.")

# Chatbot setup for a tutor-like interface
if 'memory' not in st.session_state:
    st.session_state['memory'] = []

st.chat_message("assistant").write("Good Day! Welcome to AI Tutor.. Feel free to post your doubts.")

# Chatbot history (messages) for better interaction
model = genai.GenerativeModel(model_name="gemini-1.5-pro-latest", system_instruction="you are a chatbot providing data science related content")
chat = model.start_chat(history=st.session_state['memory'])

for msg in st.session_state['memory']:
    st.chat_message('user').write(msg, role='user')

# User input for chat
user_input = st.chat_input()

if user_input:
    st.session_state['memory'].append(user_input)
    st.chat_message('user').write(user_input, role='user')
    chat_response = chat.send_message(user_input)
    st.chat_message('ai').write(chat_response.text, role='model')